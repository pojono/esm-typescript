# UPDATE
#   <<REGISTRY>>
#   <<REPOSITORY>>
#
# SECRETS
#   YC_SA_JSON_CREDENTIALS
#   STAGING_VPS_IP_ADDRESS
#   STAGING_VPS_PASSWORD
#   STAGING_VPS_PORT
#   STAGING_VPS_USERNAME
#   STAGING_VPS_PASSWORD
#   STAGING_DB_HOST
#   STAGING_DB_PORT
#   STAGING_DB_NAME
#   STAGING_DB_USER
#   STAGING_DB_PASS
#
# CHANGE THE LINES
#   ${{ secrets.STAGING_VPS_USERNAME }}@${{ secrets.STAGING_VPS_IP_ADDRESS }}:~/esm-typescript/docker-compose.yml
#   'cd ~/esm-typescript && \
#
# COPY
#   /home/ubuntu/key.json
#
name: Deploy

on:
  push:
    branches: ['staging']

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Login to Yandex Cloud Container Registry
        id: login-cr
        uses: yc-actions/yc-cr-login@v1
        with:
          yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }}

      - uses: actions/checkout@v3
      - name: Build, tag, and push image to Yandex Cloud Container Registry
        env:
          CR_REGISTRY: <<REGISTRY>>
          CR_REPOSITORY: <<REPOSITORY>>
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t cr.yandex/$CR_REGISTRY/$CR_REPOSITORY:$IMAGE_TAG .
          docker push cr.yandex/$CR_REGISTRY/$CR_REPOSITORY:$IMAGE_TAG

      - name: Copy docker-compose.yml to remote VPS
        run: |
          sshpass -p "${{ secrets.STAGING_VPS_PASSWORD }}" \
          scp -o StrictHostKeyChecking=no \
          -o UserKnownHostsFile=/dev/null \
          -P ${{ secrets.STAGING_VPS_PORT }} \
          -r docker-compose.yml \
          ${{ secrets.STAGING_VPS_USERNAME }}@${{ secrets.STAGING_VPS_IP_ADDRESS }}:~/esm-typescript/docker-compose.yml

      - name: Run docker-compose file on remote VPS
        run: |
          sshpass -p "${{ secrets.STAGING_VPS_PASSWORD }}" \
          ssh -o StrictHostKeyChecking=no \
          -o UserKnownHostsFile=/dev/null \
          -p ${{ secrets.STAGING_VPS_PORT }} \
          ${{ secrets.STAGING_VPS_USERNAME }}@${{ secrets.STAGING_VPS_IP_ADDRESS }} \
          'cd ~/esm-typescript && \
          cat /home/ubuntu/key.json | docker login --username json_key --password-stdin cr.yandex && \
          DOCKER_TAG=${{ github.sha }} \
          DB_HOST=${{ secrets.STAGING_DB_HOST }} \
          DB_PORT=${{ secrets.STAGING_DB_PORT }} \
          DB_NAME=${{ secrets.STAGING_DB_NAME }} \
          DB_USER=${{ secrets.STAGING_DB_USER }} \
          DB_PASS=${{ secrets.STAGING_DB_PASS }} \
          docker compose up -d'
